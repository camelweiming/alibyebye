<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.abb.bye.mapper.UserRelationMapper">

    <sql id="columns">
        id,
        user_id,
        ref_type,
        ref_id,
        status,
        attributes
    </sql>

    <insert id="insertOrUpdate" parameterType="com.abb.bye.client.domain.UserRelationDO">
        insert into user_relation
        ( id , gmt_create , gmt_modified , user_id , ref_type , ref_id , status , attributes )
        values
        ( #{id} , now() , now() , #{userId} , #{refType} , #{refId} , #{status} , #{attributes} )

        ON DUPLICATE KEY UPDATE
        gmt_modified=now(),
        status=#{status},
        attributes=#{attributes}
    </insert>


    <select id="getByRelationId" resultType="com.abb.bye.client.domain.UserRelationDO">
        select
        <include refid="columns"/>
        from user_relation where ref_type=#{refType} and ref_id=#{refId} and status=1
    </select>

    <select id="getByUserId" resultType="com.abb.bye.client.domain.UserRelationDO">
        select
        <include refid="columns"/>
        from user_relation where ref_type=#{refType} and user_id=#{userId} and status=1
    </select>


    <update id="removeByRelationId">
        update user_relation set status=0,gmt_modified=now() where ref_type=#{refType} and ref_id=#{refId} and status=1
    </update>

    <update id="removeByUserId">
        update user_relation set status=0,gmt_modified=now() where ref_type=#{refType} and user_id=#{userId} and status=1
    </update>

    <update id="remove">
        update user_relation set status=0,gmt_modified=now() where ref_type=#{refType} and user_id=#{userId} and ref_id=#{refId}
    </update>

    <update id="removeByIds">
        update set status=0,gmt_modified=now()
        where id in
        <foreach item="id" index="index" collection="ids" open="(" separator="," close=")">#{id}</foreach>
    </update>

</mapper>